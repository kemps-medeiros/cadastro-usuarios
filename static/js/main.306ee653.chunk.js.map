{"version":3,"sources":["components/Store/Context.js","components/Navbar/Nav.js","schemaInclude.js","components/Modal/ModalUser.js","pages/Listagem/ListUsers.js","schemaRegister.js","schemaLogin.js","pages/Login/Login.js","utils/storage.js","components/Store/Provider.js","utils/useStorage.js","pages/Inclusão/Include.js","routes.js","App.js","index.js"],"names":["StoreContext","createContext","token","setToken","Nav","useState","showLinks","setShowLinks","useContext","className","onClick","id","to","href","Yup","mixed","default","required","oneOf","notOneOf","typeError","string","length","min","max","email","url","trim","lowercase","uppercase","number","lessThan","moreThan","notEqual","positive","negative","integer","shape","name","emaillogin","emailRegister","cpf","cep","rua","bairro","numero","cidade","passwordRegister","customStyles","content","top","left","right","bottom","marginRight","transform","width","Modal","setAppElement","ModalUser","onClose","selectedUser","editUser","useEffect","console","log","document","addEventListener","handleKeyDown","removeEventListener","event","key","closeModal","isOpen","style","onRequestClose","validationSchema","schema","onSubmit","values","actions","setFieldValue","Axios","put","nome","endereço","then","response","initialValues","render","errors","touched","isValid","type","onBlur","ev","value","target","v_cep","replace","fetch","res","json","data","logradouro","localidade","onBlurCep","disabled","List","allUsers","setAllUsers","filteredUsers","setFilteredUsers","userFilter","setUserFilter","isModalOpen","setIsModalOpen","setSelectedUser","allUsersArray","getUsers","a","table","map","user","filterName","toLowerCase","Object","assign","placeholder","autoFocus","onChange","userFiltered","filterLowerCase","a_filteredUsers","filter","includes","delete","handleDeleteIcon","handleEditIcon","onSave","Login","history","useHistory","schemaLogin","get","username","password","adminLocalizated","admin","alert","push","Array","from","querySelectorAll","forEach","input","schemaRegister","post","resetForm","storage","window","localStorage","Error","set","setItem","JSON","stringify","item","getItem","parse","e","remove","removeItem","Cookie","getJSON","StoreProvider","children","state","setState","useCallback","newValue","undefined","useStorage","Context","Provider","Include","PrivateRoute","Component","component","rest","Routes","exact","path","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.306ee653.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst StoreContext = createContext({\r\n  token: null,\r\n  setToken: () => {},\r\n});\r\n\r\nexport default StoreContext;\r\n","import React, { useState, useContext } from 'react';\r\nimport { FaAlignJustify } from 'react-icons/fa';\r\nimport StoreContext from '../../components/Store/Context';\r\nimport './Nav.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n  const [showLinks, setShowLinks] = useState(false);\r\n  const { setToken } = useContext(StoreContext);\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setShowLinks(!showLinks);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar__container\">\r\n          <ul className=\"navbar__left\">\r\n            <div className=\"navbar__left-logo\">\r\n              <FaAlignJustify\r\n                className=\"toglle\"\r\n                onClick={() => setShowLinks(!showLinks)}\r\n              />\r\n              <div className=\"logo\">CADASTRO - VINGADORES</div>\r\n            </div>\r\n          </ul>\r\n\r\n          <div className=\"links\" id={showLinks ? 'hidden' : ''}>\r\n            <ul className=\"navbar__right\">\r\n              <li>\r\n                <Link to=\"/list\" onClick={() => setShowLinks(!showLinks)}>\r\n                  Usuários\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/include\" onClick={() => setShowLinks(!showLinks)}>\r\n                  Inclusão\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\" onClick={logout}>\r\n                  Logout\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import * as Yup from 'yup';\r\n\r\nYup.setLocale({\r\n  mixed: {\r\n    default: 'é inválido',\r\n    required: '*Campo obrigatório',\r\n    oneOf: 'deve ser um dos seguintes valores: ${values}',\r\n    notOneOf: 'não pode ser um dos seguintes valores: ${values}',\r\n    typeError: 'deve ser um número',\r\n  },\r\n  string: {\r\n    length: 'deve ter exatamente ${length} caracteres',\r\n    min: 'deve ter pelo menos ${min} caracteres',\r\n    max: 'deve ter no máximo ${max} caracteres',\r\n    email: '*Formato de email inválido',\r\n    url: 'deve ter um formato de URL válida',\r\n    trim: 'não deve conter espaços no início ou no fim.',\r\n    lowercase: 'deve estar em maiúsculo',\r\n    uppercase: 'deve estar em minúsculo',\r\n  },\r\n  number: {\r\n    min: 'deve ser no mínimo ${min}',\r\n    max: 'deve ser no máximo ${max}',\r\n    lessThan: 'deve ser menor que ${less}',\r\n    moreThan: 'deve ser maior que ${more}',\r\n    notEqual: 'não pode ser igual à ${notEqual}',\r\n    positive: 'deve ser um número posítivo',\r\n    negative: 'deve ser um número negativo',\r\n    integer: 'deve ser um número inteiro',\r\n  },\r\n});\r\n\r\nexport default Yup.object().shape({\r\n  name: Yup.string().required(),\r\n  email: Yup.string().email().required(),\r\n  emaillogin: Yup.string().email(),\r\n  emailRegister: Yup.string().email(),\r\n  cpf: Yup.number().typeError('*Deve ser um numero').required(),\r\n  cep: Yup.string().required(),\r\n  rua: Yup.string().required(),\r\n  bairro: Yup.string().required(),\r\n  numero: Yup.number().required(),\r\n  cidade: Yup.string().required(),\r\n  passwordRegister: Yup.string().min(4),\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport schema from '../../schemaInclude';\r\nimport Axios from 'axios';\r\nimport './ModalUser.css';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '60%',\r\n  },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ModalUser = ({ onClose, selectedUser }) => {\r\n  const [editUser, setEditUser] = useState(selectedUser);\r\n\r\n  useEffect(() => {\r\n    console.log(editUser);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    console.log(event);\r\n    if (event.key === 'Escape') {\r\n      onClose(null);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    onClose(null);\r\n  };\r\n\r\n  function onSubmit(values, actions, setFieldValue) {\r\n    Axios.put(\r\n      `https://my-json-server.typicode.com/kemps-medeiros/db-vingadores/usuarios/${values.id}`,\r\n      {\r\n        nome: values.name,\r\n        cpf: values.cpf,\r\n        email: values.email,\r\n        endereço: {\r\n          cep: values.cep,\r\n          rua: values.rua,\r\n          numero: values.numero,\r\n          bairro: values.bairro,\r\n          cidade: values.cidade,\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      console.log(response);\r\n      closeModal();\r\n    });\r\n  }\r\n\r\n  function onBlurCep(ev, setFieldValue) {\r\n    const { value } = ev.target;\r\n\r\n    const v_cep = value?.replace(/[^0-9]/g, '');\r\n\r\n    if (v_cep?.length !== 8) {\r\n      return;\r\n    }\r\n\r\n    fetch(`https://viacep.com.br/ws/${v_cep}/json/`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setFieldValue('rua', data.logradouro);\r\n        setFieldValue('bairro', data.bairro);\r\n        setFieldValue('cidade', data.localidade);\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={true} style={customStyles} onRequestClose={closeModal}>\r\n        <div className=\"btn__modal\">\r\n          <button className=\"btn__x\" onClick={closeModal}>\r\n            X\r\n          </button>\r\n        </div>\r\n        <div id=\"modalUser\">\r\n          <div>\r\n            <h1>Alterar Dados</h1>\r\n            <div className=\"form__modal\">\r\n              <Formik\r\n                className=\"formik\"\r\n                validationSchema={schema}\r\n                onSubmit={onSubmit}\r\n                initialValues={{\r\n                  id: editUser.id,\r\n                  name: editUser.nome,\r\n                  cpf: editUser.cpf,\r\n                  email: editUser.email,\r\n                  cep: editUser.cep,\r\n                  rua: editUser.rua,\r\n                  numero: editUser.numero,\r\n                  bairro: editUser.bairro,\r\n                  cidade: editUser.cidade,\r\n                }}\r\n                render={({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  isValid,\r\n                  setFieldValue,\r\n                }) => (\r\n                  <Form className=\"form__modal\">\r\n                    <div className=\"form__field__modal\">\r\n                      <label>Nome</label>\r\n                      <Field name=\"name\" type=\"text\" />\r\n                      <ErrorMessage name=\"name\" />\r\n                    </div>\r\n                    <div className=\"form__field__modal\">\r\n                      <label>CPF</label>\r\n                      <Field name=\"cpf\" type=\"text\" />\r\n                      <ErrorMessage name=\"cpf\" />\r\n                    </div>\r\n                    <div className=\"form__field__modal\">\r\n                      <label>Email</label>\r\n                      <Field name=\"email\" type=\"email\" />\r\n                      <ErrorMessage name=\"email\" />\r\n                    </div>\r\n                    <div className=\"endereco__text\">\r\n                      <h3>Endereço</h3>\r\n                    </div>\r\n                    <div className=\"form__field__modal\">\r\n                      <div className=\"cep__search\">\r\n                        <label>CEP</label>\r\n                        <div className=\"div__search\">\r\n                          <button className=\"search\">Buscar CEP: </button>\r\n                        </div>\r\n                      </div>\r\n                      <Field\r\n                        name=\"cep\"\r\n                        type=\"text\"\r\n                        onBlur={(ev) => onBlurCep(ev, setFieldValue)}\r\n                      />\r\n                      <ErrorMessage name=\"cep\" />\r\n                    </div>\r\n                    <div className=\"form__field__modal\">\r\n                      <label>Rua</label>\r\n                      <Field name=\"rua\" type=\"text\" />\r\n                      <ErrorMessage name=\"rua\" />\r\n                    </div>\r\n                    <div className=\"form__field__modal\">\r\n                      <label>Número</label>\r\n                      <Field name=\"numero\" type=\"number\" />\r\n                      <ErrorMessage name=\"numero\" />\r\n                    </div>\r\n                    <div className=\"form__field__modal\">\r\n                      <label>Bairro</label>\r\n                      <Field name=\"bairro\" type=\"text\" />\r\n                      <ErrorMessage name=\"bairro\" />\r\n                    </div>\r\n                    <div className=\"form__field__modal\">\r\n                      <label>Cidade</label>\r\n                      <Field name=\"cidade\" type=\"text\" />\r\n                      <ErrorMessage name=\"cidade\" />\r\n                    </div>\r\n                    <div className=\"btn__div\">\r\n                      <button\r\n                        className=\"btn__include\"\r\n                        type=\"submit\"\r\n                        disabled={!isValid}\r\n                      >\r\n                        Salvar\r\n                      </button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalUser;\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport StoreContext from '../../components/Store/Context';\r\nimport Nav from '../../components/Navbar/Nav';\r\nimport './List.css';\r\nimport Axios from 'axios';\r\nimport { FaTrash, FaPencilAlt } from 'react-icons/fa';\r\nimport ModalUser from '../../components/Modal/ModalUser';\r\n\r\nconst List = () => {\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [userFilter, setUserFilter] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n\r\n  let allUsersArray = [];\r\n\r\n  const { setToken } = useContext(StoreContext);\r\n\r\n  const getUsers = async () => {\r\n    const res = await fetch(\r\n      'https://my-json-server.typicode.com/kemps-medeiros/db-vingadores/usuarios'\r\n    );\r\n    let table = await res.json();\r\n    allUsersArray = table.map((user) => {\r\n      return {\r\n        id: user.id,\r\n        nome: user.nome,\r\n        filterName: user.nome.toLowerCase(),\r\n        cpf: user.cpf,\r\n        email: user.email,\r\n        cep: user.endereço.cep,\r\n        rua: user.endereço.rua,\r\n        numero: user.endereço.numero,\r\n        bairro: user.endereço.bairro,\r\n        cidade: user.endereço.cidade,\r\n      };\r\n    });\r\n\r\n    console.log(allUsersArray);\r\n\r\n    setAllUsers(allUsersArray);\r\n    setFilteredUsers(Object.assign([], allUsersArray));\r\n    // console.log(userFilter);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const handleInputChange = (event) => {\r\n    let userFiltered = event.target.value;\r\n\r\n    setUserFilter(userFiltered);\r\n    console.log(userFilter);\r\n    const filterLowerCase = userFilter.toLowerCase();\r\n    const a_filteredUsers = allUsers.filter((user) => {\r\n      return user.filterName.includes(filterLowerCase);\r\n    });\r\n\r\n    setFilteredUsers(a_filteredUsers);\r\n  };\r\n\r\n  const handleDeleteIcon = (id) => {\r\n    console.log(id);\r\n    Axios.delete(\r\n      `https://my-json-server.typicode.com/kemps-medeiros/db-vingadores/usuarios/${id}`\r\n    ).then((response) => {\r\n      console.log(response);\r\n      getUsers();\r\n    });\r\n  };\r\n\r\n  const handleEditIcon = (user) => {\r\n    setSelectedUser(user);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleSave = () => {};\r\n\r\n  const handleClose = () => {\r\n    setIsModalOpen(false);\r\n    getUsers();\r\n  };\r\n\r\n  return (\r\n    <div id=\"listUsers\">\r\n      <Nav />\r\n      <div className=\"container__list\">\r\n        <section>\r\n          <h1>Lista de Usuários Cadastrados</h1>\r\n\r\n          <div className=\"filter\">\r\n            <input\r\n              className=\"input_search\"\r\n              placeholder=\"Filtro por nome...\"\r\n              autoFocus={true}\r\n              type=\"text\"\r\n              value={userFilter}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          {allUsers.length === 0 && (\r\n            <span className=\"span__text\">\r\n              <h1>Carregando dados dos Usuários...</h1>\r\n            </span>\r\n          )}\r\n          {allUsers.length > 0 && (\r\n            <div className=\"table__users\">\r\n              <table className=\"users__list\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nome</th>\r\n                    <th>CPF</th>\r\n                    <th>Email</th>\r\n                    <th>Cidade</th>\r\n                    <th>Excluir</th>\r\n                    <th>Alterar</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {filteredUsers.map((user) => {\r\n                    let id = user.id;\r\n                    return (\r\n                      <tr key={user.id}>\r\n                        <td>{user.nome}</td>\r\n                        <td>{user.cpf}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{user.cidade}</td>\r\n                        <td>\r\n                          <FaTrash\r\n                            id={id}\r\n                            className=\"delete__icon\"\r\n                            onClick={() => handleDeleteIcon(id)}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <FaPencilAlt\r\n                            className=\"edit__icon\"\r\n                            id={id}\r\n                            onClick={() => handleEditIcon(user)}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </section>\r\n      </div>\r\n      {isModalOpen && (\r\n        <ModalUser\r\n          onSave={handleSave}\r\n          onClose={handleClose}\r\n          selectedUser={selectedUser}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import * as Yup from 'yup';\r\n\r\nYup.setLocale({\r\n  mixed: {\r\n    default: 'é inválido',\r\n    required: '*Campo obrigatório',\r\n    oneOf: 'deve ser um dos seguintes valores: ${values}',\r\n    notOneOf: 'não pode ser um dos seguintes valores: ${values}',\r\n  },\r\n  string: {\r\n    length: 'deve ter exatamente ${length} caracteres',\r\n    min: 'deve ter pelo menos ${min} caracteres',\r\n    max: 'deve ter no máximo ${max} caracteres',\r\n    email: '*Formato de email inválido',\r\n    url: 'deve ter um formato de URL válida',\r\n    trim: 'não deve conter espaços no início ou no fim.',\r\n    lowercase: 'deve estar em maiúsculo',\r\n    uppercase: 'deve estar em minúsculo',\r\n  },\r\n  number: {\r\n    min: 'deve ser no mínimo ${min}',\r\n    max: 'deve ser no máximo ${max}',\r\n    lessThan: 'deve ser menor que ${less}',\r\n    moreThan: 'deve ser maior que ${more}',\r\n    notEqual: 'não pode ser igual à ${notEqual}',\r\n    positive: 'deve ser um número posítivo',\r\n    negative: 'deve ser um número negativo',\r\n    integer: 'deve ser um número inteiro',\r\n  },\r\n});\r\n\r\nexport default Yup.object().shape({\r\n  emailRegister: Yup.string().email().required(),\r\n  passwordRegister: Yup.string().min(4).required(),\r\n});\r\n","import * as Yup from 'yup';\r\n\r\nYup.setLocale({\r\n  mixed: {\r\n    default: 'é inválido',\r\n    required: '*Campo obrigatório',\r\n    oneOf: 'deve ser um dos seguintes valores: ${values}',\r\n    notOneOf: 'não pode ser um dos seguintes valores: ${values}',\r\n  },\r\n  string: {\r\n    length: 'deve ter exatamente ${length} caracteres',\r\n    min: 'deve ter pelo menos ${min} caracteres',\r\n    max: 'deve ter no máximo ${max} caracteres',\r\n    email: '*Formato de email inválido',\r\n    url: 'deve ter um formato de URL válida',\r\n    trim: 'não deve conter espaços no início ou no fim.',\r\n    lowercase: 'deve estar em maiúsculo',\r\n    uppercase: 'deve estar em minúsculo',\r\n  },\r\n  number: {\r\n    min: 'deve ser no mínimo ${min}',\r\n    max: 'deve ser no máximo ${max}',\r\n    lessThan: 'deve ser menor que ${less}',\r\n    moreThan: 'deve ser maior que ${more}',\r\n    notEqual: 'não pode ser igual à ${notEqual}',\r\n    positive: 'deve ser um número posítivo',\r\n    negative: 'deve ser um número negativo',\r\n    integer: 'deve ser um número inteiro',\r\n  },\r\n});\r\n\r\nexport default Yup.object().shape({\r\n  emaillogin: Yup.string().email(),\r\n});\r\n","import React, { useContext } from 'react';\r\nimport './Login.css';\r\nimport Axios from 'axios';\r\nimport StoreContext from '../../components/Store/Context';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport schemaRegister from '../../schemaRegister';\r\nimport schemaLogin from '../../schemaLogin';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\n\r\nconst Login = () => {\r\n  const { setToken } = useContext(StoreContext);\r\n  const history = useHistory();\r\n\r\n  function register(values, actions) {\r\n    Axios.post(\r\n      'https://my-json-server.typicode.com/kemps-medeiros/db-vingadores/administradores',\r\n      {\r\n        username: values.emailRegister,\r\n        password: values.passwordRegister,\r\n      }\r\n    ).then((response) => {\r\n      console.log(response);\r\n      alert('Usuário Cadastrado com Sucesso');\r\n    });\r\n    actions.resetForm();\r\n  }\r\n\r\n  function login(values, actions) {\r\n    Axios.get(\r\n      'https://my-json-server.typicode.com/kemps-medeiros/db-vingadores/administradores',\r\n      {\r\n        username: values.emaillogin,\r\n        password: values.password,\r\n      }\r\n    ).then((response) => {\r\n      let admins = response.data;\r\n      let adminLocalizated = admins.filter(\r\n        (admin) => admin.username === values.emaillogin\r\n      );\r\n      if (adminLocalizated.length === 0) {\r\n        alert('Usuário ou senha incorreta');\r\n        console.log('Usuário não encontrado');\r\n      } else if (adminLocalizated.length > 0) {\r\n        if (\r\n          adminLocalizated[0].username === values.emaillogin &&\r\n          adminLocalizated[0].password === values.password\r\n        ) {\r\n          setToken('1234');\r\n          // console.log('admin Encontrado');\r\n          history.push('/list');\r\n        } else {\r\n          alert('Usuário ou senha incorreta');\r\n        }\r\n      }\r\n      Array.from(document.querySelectorAll('input')).forEach(\r\n        (input) => (input.value = '')\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"loginAndRegister\">\r\n      <div className=\"col-4 center\">\r\n        <div className=\"login__area\">\r\n          <h1>VINGADORES</h1>\r\n          <h2>CADASTRO DE USUÁRIOS</h2>\r\n          <div className=\"login\">\r\n            <h3>Login</h3>\r\n            <Formik\r\n              validationSchema={schemaLogin}\r\n              onSubmit={login}\r\n              initialValues={{\r\n                emaillogin: '',\r\n                password: '',\r\n              }}\r\n              render={({ values, errors, touched, isValid, setFieldValue }) => (\r\n                <Form className=\"formik__login\">\r\n                  <label>Email</label>\r\n                  <Field type=\"email\" autoFocus={true} name=\"emaillogin\" />\r\n                  <ErrorMessage name=\"emaillogin\" />\r\n                  <label>Senha</label>\r\n                  <Field type=\"password\" name=\"password\" />\r\n                  <div className=\"btn\">\r\n                    <button className=\"btn__enter\" type=\"submit\">\r\n                      {' '}\r\n                      Entrar{' '}\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"registration\">\r\n            <h3>Registrar</h3>\r\n            <Formik\r\n              validationSchema={schemaRegister}\r\n              onSubmit={register}\r\n              initialValues={{\r\n                emailRegister: '',\r\n                passwordRegister: '',\r\n              }}\r\n              render={({ values, errors, touched, isValid, setFieldValue }) => (\r\n                <Form className=\"formik__register\">\r\n                  <div className=\"form__register__fields\">\r\n                    <label>Email</label>\r\n                    <Field type=\"text\" name=\"emailRegister\" />\r\n                    <ErrorMessage name=\"emailRegister\" />\r\n                  </div>\r\n                  <div className=\"form__register__fields\">\r\n                    <label>Senha</label>\r\n                    <Field type=\"password\" name=\"passwordRegister\" />\r\n                    <ErrorMessage name=\"passwordRegister\" />\r\n                  </div>\r\n                  <div className=\"btn\">\r\n                    <button className=\"btn__register\" type=\"submit\">\r\n                      Registrar\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import Cookie from 'js-cookie';\r\n\r\nconst storage = {};\r\n\r\n// Safari in incognito has local storage, but size 0\r\n// This system falls back to cookies in that situation\r\ntry {\r\n  if (!window.localStorage) {\r\n    throw Error('no local storage');\r\n  }\r\n\r\n  // Setup simple local storage wrapper\r\n  storage.set = (key, value) =>\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  storage.get = (key) => {\r\n    const item = localStorage.getItem(key);\r\n    try {\r\n      return JSON.parse(item);\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n  storage.remove = (key) => localStorage.removeItem(key);\r\n} catch (e) {\r\n  storage.set = Cookie.set;\r\n  storage.get = Cookie.getJSON;\r\n  storage.remove = Cookie.remove;\r\n}\r\n\r\nexport default storage;\r\n","import React from 'react';\r\nimport Context from './Context';\r\nimport useStorage from '../../utils/useStorage';\r\n\r\nconst StoreProvider = ({ children }) => {\r\n  const [token, setToken] = useStorage('token');\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        token,\r\n        setToken,\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default StoreProvider;\r\n","import { useCallback, useState } from 'react';\r\nimport storage from './storage';\r\n\r\nexport default function useStorage(key) {\r\n  const [state, setState] = useState(() => storage.get(key));\r\n\r\n  const set = useCallback(\r\n    (newValue) => {\r\n      storage.set(key, newValue);\r\n      setState(newValue);\r\n    },\r\n    [key]\r\n  );\r\n\r\n  const remove = useCallback(() => {\r\n    storage.remove(key);\r\n    setState(undefined);\r\n  }, [key]);\r\n\r\n  return [state, set, remove];\r\n}\r\n","import React from 'react';\r\nimport Nav from '../../components/Navbar/Nav';\r\nimport './Include.css';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport schema from '../../schemaInclude';\r\nimport Axios from 'axios';\r\n\r\nconst Include = () => {\r\n  function onSubmit(values, actions) {\r\n    Axios.post('http://localhost:5000/usuarios', {\r\n      nome: values.name,\r\n      cpf: values.cpf,\r\n      email: values.email,\r\n      endereço: {\r\n        cep: values.cep,\r\n        rua: values.rua,\r\n        numero: values.numero,\r\n        bairro: values.bairro,\r\n        cidade: values.cidade,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n\r\n    actions.resetForm();\r\n    alert('USUÁRIO CADASTRADO COM SUCESSO');\r\n  }\r\n\r\n  function onBlurCep(ev, setFieldValue) {\r\n    const { value } = ev.target;\r\n\r\n    const v_cep = value?.replace(/[^0-9]/g, '');\r\n\r\n    if (v_cep?.length !== 8) {\r\n      return;\r\n    }\r\n\r\n    fetch(`https://viacep.com.br/ws/${v_cep}/json/`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setFieldValue('rua', data.logradouro);\r\n        setFieldValue('bairro', data.bairro);\r\n        setFieldValue('cidade', data.localidade);\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <div id=\"include\">\r\n        <div className=\"container__include\">\r\n          <h1>Inclusão de novo Usuário</h1>\r\n          <div className=\"form\">\r\n            <Formik\r\n              validationSchema={schema}\r\n              onSubmit={onSubmit}\r\n              initialValues={{\r\n                name: '',\r\n                cpf: '',\r\n                email: '',\r\n                cep: '',\r\n                rua: '',\r\n                numero: '',\r\n                bairro: '',\r\n                cidade: '',\r\n              }}\r\n              render={({ values, errors, touched, isValid, setFieldValue }) => (\r\n                <Form className=\"form__formik\">\r\n                  <div className=\"form__field\">\r\n                    <label>Nome</label>\r\n                    <Field name=\"name\" type=\"text\" />\r\n                    <ErrorMessage name=\"name\" />\r\n                  </div>\r\n                  <div className=\"form__field\">\r\n                    <label>CPF</label>\r\n                    <Field name=\"cpf\" type=\"text\" />\r\n                    <ErrorMessage name=\"cpf\" />\r\n                  </div>\r\n                  <div className=\"form__field\">\r\n                    <label>Email</label>\r\n                    <Field name=\"email\" type=\"email\" />\r\n                    <ErrorMessage name=\"email\" />\r\n                  </div>\r\n                  <div className=\"endereco__text\">\r\n                    <h3>Endereço</h3>\r\n                  </div>\r\n                  <div className=\"form__field\">\r\n                    <div className=\"cep__search\">\r\n                      <label>CEP</label>\r\n                      <div className=\"div__search\">\r\n                        <button className=\"search\">Buscar CEP: </button>\r\n                      </div>\r\n                    </div>\r\n                    <Field\r\n                      name=\"cep\"\r\n                      type=\"text\"\r\n                      onBlur={(ev) => onBlurCep(ev, setFieldValue)}\r\n                    />\r\n                    <ErrorMessage name=\"cep\" />\r\n                  </div>\r\n                  <div className=\"form__field\">\r\n                    <label>Rua</label>\r\n                    <Field name=\"rua\" type=\"text\" />\r\n                    <ErrorMessage name=\"rua\" />\r\n                  </div>\r\n                  <div className=\"form__field\">\r\n                    <label>Número</label>\r\n                    <Field name=\"numero\" type=\"number\" />\r\n                    <ErrorMessage name=\"numero\" />\r\n                  </div>\r\n                  <div className=\"form__field\">\r\n                    <label>Bairro</label>\r\n                    <Field name=\"bairro\" type=\"text\" />\r\n                    <ErrorMessage name=\"bairro\" />\r\n                  </div>\r\n                  <div className=\"form__field\">\r\n                    <label>Cidade</label>\r\n                    <Field name=\"cidade\" type=\"text\" />\r\n                    <ErrorMessage name=\"cidade\" />\r\n                  </div>\r\n                  <div className=\"btn__div\">\r\n                    <button\r\n                      className=\"btn__include\"\r\n                      type=\"submit\"\r\n                      disabled={!isValid}\r\n                    >\r\n                      Cadastrar Novo Usuário\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Include;\r\n","import React, { useContext } from 'react';\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  HashRouter,\r\n} from 'react-router-dom';\r\nimport List from './pages/Listagem/ListUsers';\r\nimport Login from './pages/Login/Login';\r\nimport StoreProvider from './components/Store/Provider';\r\nimport StoreContext from './components/Store/Context';\r\nimport Include from './pages/Inclusão/Include';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { token } = useContext(StoreContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => (token ? <Component {...rest} /> : <Redirect to=\"/\" />)}\r\n    />\r\n  );\r\n};\r\n\r\nconst Routes = () => (\r\n  <HashRouter>\r\n    <StoreProvider>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <PrivateRoute exact path=\"/list\" component={List} />\r\n        <PrivateRoute exact path=\"/include\" component={Include} />\r\n      </Switch>\r\n    </StoreProvider>\r\n  </HashRouter>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport './App.css';\nimport Routes from './routes';\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}